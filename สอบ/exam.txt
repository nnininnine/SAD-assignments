2. คำกล่าวที่ว่า “Functionality and quality attributes are orthogonal" หมายความว่าอย่างไร?
จงอธิบายโดยสังเขปพร้อมกับยกตัวอย่างประกอบ
ans:
Functionality หรือก็คือ Functional requirement 
--------------------------------------------------------------------

3. จากคำกล่าวที่ว่า "Architecture constrains systems" จงอภิปรายว่าเหตุใดการตัดสินใจเชิงสถาปัตยกรรมที่สร้างข้อจำกัดให้กับระบบจึงถูกนำไปใช้ให้เกิดประโยชน์ได้
จงยกตัวอย่างประกอบ
ans:

--------------------------------------------------------------------

4. โครงการพัฒนาซอฟต์แวร์ที่ต่างกันมักให้น้ำหนักและความสำคัญกับการออกแบบสถาปัตยกรรมซอฟต์แวร์ แตกต่างกันไปตามแต่ลักษณะและรายละเอียดของโครงการในกรณีใดบ้างที่
การออกแบบสถาปัตยกรรมซอฟต์แวร์มีความสำคัญอย่างยิ่งยวด จงอธิบายลักษณะของโครงการพัฒนาซอฟต์แวร์ในกรณีดังกล่าวมาอย่างน้อย 3 ประการ
พร้อมทั้งเลือกลักษณะ 1 ใน 3 ประการ เพื่อยกตัวอย่างโครงการประกอบคำอธิบาย
ans:
- ระบบที่มีการรองรับระบบปฏิบัติการมากกว่า 1
- ระบบที่เป็นการพัฒนาใหม่ตั้งแต่แรก
- ระบบที่มีการเชื่อมต่ออุปกรณ์ภายนอก

สำหรับระบบที่มีการรองรับระบบปฏิบัติการมากกว่า 1 อย่างเช่น ระบบจัดการร้านอาหารผ่าน tablet ซึ่งรองรับระบบปฏิบัติการทั้ง iOS และ Android ที่เวลาในการออกแบบ
จะต้องออกแบบให้ software รองรับกับ style ของแต่ละระบบปฏิบัติการเพื่อไม่ให้มีระบบปฏิบัติการไหนมีการใช้ resource ที่มากเกินไปจนทำให้ performance ของระบบปฏิบัติการนั้นไม่ดี
--------------------------------------------------------------------

5. จาก deployment diagram แสดงโครงสร้างระบบสถาปัตยกรรมแบบ 3-Tier จงแสดงการคำนวณหา availability ของระบบ และคำนวณคำตอบที่มีทศนิยมไม่น้อยกว่า 4 ตำแหน่ง
กำหนดให้ availability สำหรับ node ประเภทต่างๆ มีค่าดังต่อไปนี้
99.0% สำหรับ Web Server (WebServer)
90.0% สำหรับ Application Server (AppServer) และให้ถือว่าระบบยัง available เมื่อมีอย่างน้อย 1 instance ที่ยังทำงานได้
95.0% สำหรับ Database Server (DBServer) และให้ถือว่าระบบยัง available เมื่อมีอย่างน้อย 1 instance ที่ยังทำงานได้
ans:
Web server: 99.0%
Application 3 node 90.0%/node มีอย่างน้อย 1 instance ที่ยังทำงานได้ -> Application = 1-(1-0.9)^3 = 99.9%
DBServer 2 node 95.0%/node มีอย่างน้อย 1 instance ที่ยังทำงานได้ -> DBServer = 1-(1-0.95)^2 = 99.75%

Availability ทั้งระบบ = 0.99 * 0.999 * 0.9975 = 0.986537 = 98.6537%
--------------------------------------------------------------------

6. “ปัจจุบันมีมาตรฐานของรูปแบบข้อมูลที่เป็นที่นิยมใช้งานและรู้จักโดยทั่วไป เช่น CSV, XML, หรือ JSON ดังนั้นในการออกแบบระบบให้สามารถทำงานร่วมกันได้อย่างถูกต้อง (interoperable)
จึงเป็นเพียงการตกลงเลือกใช้มาตรฐานต่างๆ ให้ตรงกัน”

นักศึกษาเห็นด้วยกับข้อความข้างต้นหรือไม่ จงอภิปรายโดยสังเขปพร้อมยกตัวอย่างประกอบ
ans: 
ไม่เห็นด้วย เพราะว่าการออกแบบระบบให้สามารถทำงานร่วมกันได้อย่างถูกต้อง(Interoperability) นั้น การตกลงเลือกใช้มาตรฐานให้ตรงกัน(Syntactic interoperability) เป็นเพียงส่วนหนึ่งเท่านั้น
ยังมีการตกลงกันเรื่องการตีความของความหมาย(shared meaning) ให้ตรงกัน(Semantic interoperability)อีกด้วย อย่างเช่น software 2 ตัวที่ทำงานร่วมกันโดยใช้ data format กลาง
ร่วมกันเป็น XML จะยังไม่สามารถทำงานร่วมกันได้อย่างถูกต้องหากยังไม่ได้ตกลงกันเรื่องการตีความข้อมูลในไฟล์ XML
--------------------------------------------------------------------

7.ในกรณีที่ต้องแก้ไขระบบหรือซอฟต์แวร์ การมี UML diagram เช่น class diagram สามารถนำมาใช้ช่วยในการประเมิน coupling ของ module หรือ class ได้อย่างไรบ้าง
จงอธิบายแนวทางพอสังเขป
ans:
coupling คือ การวัดความสัมพันธ์ระหว่าง module หรือ class ว่ามีความซับซ้อนมากน้อยแค่ไหน
เวลาที่ต้องแก้ไขระบบหรือซอฟต์แวร์ การมี UML diagram เช่น class diagram จะช่วยให้สามารถประเมิน coupling ของ module หรือ class ได้ง่ายขึ้น
เพราะว่าใน UML diagram อย่าง class diagram จะมีการแสดงความสัมพันธ์(dependency) ของแต่ละ class ซึ่งจะทำให้เราสามารถเห็นความสัมพันธ์โดยรวมของทั้งระบบได้
ทำให้สามารถวัดหรือประเมินได้ง่ายขึ้น
--------------------------------------------------------------------

8. การเพิ่มขีดความสามารถ concurrency ของระบบ เป็นหนึ่งในแนวทางที่ใช้ในการเพิ่ม performance ของ software system จงค้นคว้าข้อมูลจาก Internet เพิ่มเติม
และอภิปรายว่าแนวทางดังกล่าวอาจจะส่งผลอย่างไรบ้างต่อ Testability? เพราะเหตุใด? จงยกตัวอย่างประกอบ
ans:
การเพิ่ม concurrency คือการให้ระบบรองรับการทำงานพร้อมกันจากหลาย ๆ ผู้ใช้งาน ซึ่งส่งผลต่อ Testability ดังนี้
- การทดสอบอาจจะเช็คผลลัพธ์ได้ลำบากขึ้น เพราะว่าหากทดสอบหลาย ๆ ผู้ใช้พร้อมกันหากมี failed ขึ้นมาจะเช็คไม่ได้ว่ามาจากไหน
- อาจจะปัญหาการสูญหายของข้อมูลในฐานข้อมูล เพราะในการทดสอบหากมีการ update ข้อมูลมาพร้อม ๆ กันอาจเกิด race condition ทำให้ข้อมูลสูญหายได้
- อาจจะต้องเพิ่ม device ที่ใช้ในการทดสอบ เพราะว่าเราจะต้องทดสอบในหลาย ๆ ผู้ใช้พร้อมกัน
- มีโอกาส fail ได้ง่ายขึ้น เพราะยิ่งเราทำให้ระบบทำงานพร้อมกันได้มากเท่าไหร่ ปัญหาก็จะตามมามากขึ้นเพราะ test case ก็จะเพิ่มตามไปด้วย

ยกตัวอย่าง
การทดสอบระบบหลังบ้านของ software ซักตัวหนึ่งที่เพิ่มความสามารถ concurrency ที่เราจะต้องทดสอบหลาย ๆ เครื่องพร้อมกันเพื่อหา bug เราจะต้องเพิ่ม test case
มากขึ้นกว่าเดิมเยอะเพื่อที่จะได้ทดสอบได้อย่างครอบคลุม และถ้าหากมี fail ขึ้นมาเราก็จะต้องทดสอบซ้ำอีกในแต่ละผู้ใช้เพราะจะไม่รู้เลยว่ามันเกิดจากเครื่องไหน
--------------------------------------------------------------------

9.จงยกตัวอย่างกรณีการเพิ่ม Security ให้กับระบบ แต่ส่งผลกระทบให้ Usability พร้อมอภิปรายว่า Usability
ได้รับผลกระทบเพิ่มขึ้นหรือลดลงอย่างไร เหตุใดจึงมีการเปลี่ยนแปลง จากรณีดังกล่าว
ans:
Security ที่เพิ่มเข้ามาให้กับระบบนั้นจะส่งผลกระทบให้ Usability นั้นลดลงเพราะว่ายิ่งทำระบบให้ปลอดภัยมากขึ้น การใช้งานก็จะยากขึ้นตามไปด้วยเช่นกัน
เช่น ระบบที่มี 2FA(Two Factor Authentication) ในการเข้าสู่ระบบนั้นจะช่วยเพิ่มความปลอดภัยให้กับผู้ใช้งานได้มากขึ้น
แต่ขั้นตอนในการเข้าสู่ระบบก็จะมีเพิ่มตามไปด้วยส่งผลให้ใช้เวลานานขึ้นไปด้วยเช่นกัน 
